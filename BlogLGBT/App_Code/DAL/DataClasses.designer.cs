#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BlogBD")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertTrabajo(Trabajo instance);
    partial void UpdateTrabajo(Trabajo instance);
    partial void DeleteTrabajo(Trabajo instance);
    partial void InsertNoticia(Noticia instance);
    partial void UpdateNoticia(Noticia instance);
    partial void DeleteNoticia(Noticia instance);
    partial void InsertMensaje(Mensaje instance);
    partial void UpdateMensaje(Mensaje instance);
    partial void DeleteMensaje(Mensaje instance);
    partial void InsertEvento(Evento instance);
    partial void UpdateEvento(Evento instance);
    partial void DeleteEvento(Evento instance);
    partial void InsertComentario(Comentario instance);
    partial void UpdateComentario(Comentario instance);
    partial void DeleteComentario(Comentario instance);
    partial void InsertCategoria(Categoria instance);
    partial void UpdateCategoria(Categoria instance);
    partial void DeleteCategoria(Categoria instance);
    partial void InsertAsociacion(Asociacion instance);
    partial void UpdateAsociacion(Asociacion instance);
    partial void DeleteAsociacion(Asociacion instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BlogBDConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Trabajo> Trabajo
		{
			get
			{
				return this.GetTable<Trabajo>();
			}
		}
		
		public System.Data.Linq.Table<Noticia> Noticia
		{
			get
			{
				return this.GetTable<Noticia>();
			}
		}
		
		public System.Data.Linq.Table<Mensaje> Mensaje
		{
			get
			{
				return this.GetTable<Mensaje>();
			}
		}
		
		public System.Data.Linq.Table<Evento> Evento
		{
			get
			{
				return this.GetTable<Evento>();
			}
		}
		
		public System.Data.Linq.Table<Comentario> Comentario
		{
			get
			{
				return this.GetTable<Comentario>();
			}
		}
		
		public System.Data.Linq.Table<Categoria> Categoria
		{
			get
			{
				return this.GetTable<Categoria>();
			}
		}
		
		public System.Data.Linq.Table<Asociacion> Asociacion
		{
			get
			{
				return this.GetTable<Asociacion>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LoginID;
		
		private string _Contra;
		
		private string _Nombre;
		
		private string _Email;
		
		private string _Tipo;
		
		private bool _Administrador;
		
		private EntitySet<Trabajo> _Trabajo;
		
		private EntitySet<Mensaje> _Mensaje;
		
		private EntitySet<Mensaje> _Mensaje1;
		
		private EntitySet<Comentario> _Comentario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginIDChanging(string value);
    partial void OnLoginIDChanged();
    partial void OnContraChanging(string value);
    partial void OnContraChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    partial void OnAdministradorChanging(bool value);
    partial void OnAdministradorChanged();
    #endregion
		
		public Usuario()
		{
			this._Trabajo = new EntitySet<Trabajo>(new Action<Trabajo>(this.attach_Trabajo), new Action<Trabajo>(this.detach_Trabajo));
			this._Mensaje = new EntitySet<Mensaje>(new Action<Mensaje>(this.attach_Mensaje), new Action<Mensaje>(this.detach_Mensaje));
			this._Mensaje1 = new EntitySet<Mensaje>(new Action<Mensaje>(this.attach_Mensaje1), new Action<Mensaje>(this.detach_Mensaje1));
			this._Comentario = new EntitySet<Comentario>(new Action<Comentario>(this.attach_Comentario), new Action<Comentario>(this.detach_Comentario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					this.OnLoginIDChanging(value);
					this.SendPropertyChanging();
					this._LoginID = value;
					this.SendPropertyChanged("LoginID");
					this.OnLoginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contra", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Contra
		{
			get
			{
				return this._Contra;
			}
			set
			{
				if ((this._Contra != value))
				{
					this.OnContraChanging(value);
					this.SendPropertyChanging();
					this._Contra = value;
					this.SendPropertyChanged("Contra");
					this.OnContraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(200)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(500)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="NVarChar(100)")]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Administrador", DbType="Bit NOT NULL")]
		public bool Administrador
		{
			get
			{
				return this._Administrador;
			}
			set
			{
				if ((this._Administrador != value))
				{
					this.OnAdministradorChanging(value);
					this.SendPropertyChanging();
					this._Administrador = value;
					this.SendPropertyChanged("Administrador");
					this.OnAdministradorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Trabajo", Storage="_Trabajo", ThisKey="LoginID", OtherKey="LoginID")]
		public EntitySet<Trabajo> Trabajo
		{
			get
			{
				return this._Trabajo;
			}
			set
			{
				this._Trabajo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Mensaje", Storage="_Mensaje", ThisKey="LoginID", OtherKey="IdUsuarioRec")]
		public EntitySet<Mensaje> Mensaje
		{
			get
			{
				return this._Mensaje;
			}
			set
			{
				this._Mensaje.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Mensaje1", Storage="_Mensaje1", ThisKey="LoginID", OtherKey="IdUsuarioEnv")]
		public EntitySet<Mensaje> Mensaje1
		{
			get
			{
				return this._Mensaje1;
			}
			set
			{
				this._Mensaje1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Comentario", Storage="_Comentario", ThisKey="LoginID", OtherKey="LoginID")]
		public EntitySet<Comentario> Comentario
		{
			get
			{
				return this._Comentario;
			}
			set
			{
				this._Comentario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Trabajo(Trabajo entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Trabajo(Trabajo entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Mensaje(Mensaje entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Mensaje(Mensaje entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Mensaje1(Mensaje entity)
		{
			this.SendPropertyChanging();
			entity.Usuario1 = this;
		}
		
		private void detach_Mensaje1(Mensaje entity)
		{
			this.SendPropertyChanging();
			entity.Usuario1 = null;
		}
		
		private void attach_Comentario(Comentario entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Comentario(Comentario entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Trabajo")]
	public partial class Trabajo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdTrabajo;
		
		private string _LoginID;
		
		private string _Titulo;
		
		private string _Lugar;
		
		private string _Descripcion;
		
		private System.DateTime _FechaPublicacion;
		
		private string _Tipo;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTrabajoChanging(long value);
    partial void OnIdTrabajoChanged();
    partial void OnLoginIDChanging(string value);
    partial void OnLoginIDChanged();
    partial void OnTituloChanging(string value);
    partial void OnTituloChanged();
    partial void OnLugarChanging(string value);
    partial void OnLugarChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnFechaPublicacionChanging(System.DateTime value);
    partial void OnFechaPublicacionChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    #endregion
		
		public Trabajo()
		{
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTrabajo", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdTrabajo
		{
			get
			{
				return this._IdTrabajo;
			}
			set
			{
				if ((this._IdTrabajo != value))
				{
					this.OnIdTrabajoChanging(value);
					this.SendPropertyChanging();
					this._IdTrabajo = value;
					this.SendPropertyChanged("IdTrabajo");
					this.OnIdTrabajoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", DbType="NVarChar(100)")]
		public string LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginIDChanging(value);
					this.SendPropertyChanging();
					this._LoginID = value;
					this.SendPropertyChanged("LoginID");
					this.OnLoginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titulo", DbType="NVarChar(100)")]
		public string Titulo
		{
			get
			{
				return this._Titulo;
			}
			set
			{
				if ((this._Titulo != value))
				{
					this.OnTituloChanging(value);
					this.SendPropertyChanging();
					this._Titulo = value;
					this.SendPropertyChanged("Titulo");
					this.OnTituloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lugar", DbType="NVarChar(100)")]
		public string Lugar
		{
			get
			{
				return this._Lugar;
			}
			set
			{
				if ((this._Lugar != value))
				{
					this.OnLugarChanging(value);
					this.SendPropertyChanging();
					this._Lugar = value;
					this.SendPropertyChanged("Lugar");
					this.OnLugarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaPublicacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaPublicacion
		{
			get
			{
				return this._FechaPublicacion;
			}
			set
			{
				if ((this._FechaPublicacion != value))
				{
					this.OnFechaPublicacionChanging(value);
					this.SendPropertyChanging();
					this._FechaPublicacion = value;
					this.SendPropertyChanged("FechaPublicacion");
					this.OnFechaPublicacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="NVarChar(100)")]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Trabajo", Storage="_Usuario", ThisKey="LoginID", OtherKey="LoginID", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Trabajo.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Trabajo.Add(this);
						this._LoginID = value.LoginID;
					}
					else
					{
						this._LoginID = default(string);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Noticia")]
	public partial class Noticia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdNot;
		
		private string _Titulo;
		
		private string _Cuerpo;
		
		private long _LoginID;
		
		private System.Nullable<long> _IdCategoria;
		
		private System.DateTime _FechaPublicacion;
		
		private EntityRef<Categoria> _Categoria;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNotChanging(long value);
    partial void OnIdNotChanged();
    partial void OnTituloChanging(string value);
    partial void OnTituloChanged();
    partial void OnCuerpoChanging(string value);
    partial void OnCuerpoChanged();
    partial void OnLoginIDChanging(long value);
    partial void OnLoginIDChanged();
    partial void OnIdCategoriaChanging(System.Nullable<long> value);
    partial void OnIdCategoriaChanged();
    partial void OnFechaPublicacionChanging(System.DateTime value);
    partial void OnFechaPublicacionChanged();
    #endregion
		
		public Noticia()
		{
			this._Categoria = default(EntityRef<Categoria>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNot", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdNot
		{
			get
			{
				return this._IdNot;
			}
			set
			{
				if ((this._IdNot != value))
				{
					this.OnIdNotChanging(value);
					this.SendPropertyChanging();
					this._IdNot = value;
					this.SendPropertyChanged("IdNot");
					this.OnIdNotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titulo", DbType="NVarChar(100)")]
		public string Titulo
		{
			get
			{
				return this._Titulo;
			}
			set
			{
				if ((this._Titulo != value))
				{
					this.OnTituloChanging(value);
					this.SendPropertyChanging();
					this._Titulo = value;
					this.SendPropertyChanged("Titulo");
					this.OnTituloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cuerpo", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Cuerpo
		{
			get
			{
				return this._Cuerpo;
			}
			set
			{
				if ((this._Cuerpo != value))
				{
					this.OnCuerpoChanging(value);
					this.SendPropertyChanging();
					this._Cuerpo = value;
					this.SendPropertyChanged("Cuerpo");
					this.OnCuerpoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", DbType="BigInt NOT NULL")]
		public long LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					this.OnLoginIDChanging(value);
					this.SendPropertyChanging();
					this._LoginID = value;
					this.SendPropertyChanged("LoginID");
					this.OnLoginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategoria", DbType="BigInt")]
		public System.Nullable<long> IdCategoria
		{
			get
			{
				return this._IdCategoria;
			}
			set
			{
				if ((this._IdCategoria != value))
				{
					if (this._Categoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCategoriaChanging(value);
					this.SendPropertyChanging();
					this._IdCategoria = value;
					this.SendPropertyChanged("IdCategoria");
					this.OnIdCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaPublicacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaPublicacion
		{
			get
			{
				return this._FechaPublicacion;
			}
			set
			{
				if ((this._FechaPublicacion != value))
				{
					this.OnFechaPublicacionChanging(value);
					this.SendPropertyChanging();
					this._FechaPublicacion = value;
					this.SendPropertyChanged("FechaPublicacion");
					this.OnFechaPublicacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Noticia", Storage="_Categoria", ThisKey="IdCategoria", OtherKey="IdCategoria", IsForeignKey=true)]
		public Categoria Categoria
		{
			get
			{
				return this._Categoria.Entity;
			}
			set
			{
				Categoria previousValue = this._Categoria.Entity;
				if (((previousValue != value) 
							|| (this._Categoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categoria.Entity = null;
						previousValue.Noticia.Remove(this);
					}
					this._Categoria.Entity = value;
					if ((value != null))
					{
						value.Noticia.Add(this);
						this._IdCategoria = value.IdCategoria;
					}
					else
					{
						this._IdCategoria = default(Nullable<long>);
					}
					this.SendPropertyChanged("Categoria");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mensaje")]
	public partial class Mensaje : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdMensaje;
		
		private string _IdUsuarioEnv;
		
		private string _IdUsuarioRec;
		
		private string _Texto;
		
		private EntityRef<Usuario> _Usuario;
		
		private EntityRef<Usuario> _Usuario1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdMensajeChanging(long value);
    partial void OnIdMensajeChanged();
    partial void OnIdUsuarioEnvChanging(string value);
    partial void OnIdUsuarioEnvChanged();
    partial void OnIdUsuarioRecChanging(string value);
    partial void OnIdUsuarioRecChanged();
    partial void OnTextoChanging(string value);
    partial void OnTextoChanged();
    #endregion
		
		public Mensaje()
		{
			this._Usuario = default(EntityRef<Usuario>);
			this._Usuario1 = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMensaje", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdMensaje
		{
			get
			{
				return this._IdMensaje;
			}
			set
			{
				if ((this._IdMensaje != value))
				{
					this.OnIdMensajeChanging(value);
					this.SendPropertyChanging();
					this._IdMensaje = value;
					this.SendPropertyChanged("IdMensaje");
					this.OnIdMensajeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuarioEnv", DbType="NVarChar(100)")]
		public string IdUsuarioEnv
		{
			get
			{
				return this._IdUsuarioEnv;
			}
			set
			{
				if ((this._IdUsuarioEnv != value))
				{
					if (this._Usuario1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioEnvChanging(value);
					this.SendPropertyChanging();
					this._IdUsuarioEnv = value;
					this.SendPropertyChanged("IdUsuarioEnv");
					this.OnIdUsuarioEnvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuarioRec", DbType="NVarChar(100)")]
		public string IdUsuarioRec
		{
			get
			{
				return this._IdUsuarioRec;
			}
			set
			{
				if ((this._IdUsuarioRec != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioRecChanging(value);
					this.SendPropertyChanging();
					this._IdUsuarioRec = value;
					this.SendPropertyChanged("IdUsuarioRec");
					this.OnIdUsuarioRecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Texto", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Texto
		{
			get
			{
				return this._Texto;
			}
			set
			{
				if ((this._Texto != value))
				{
					this.OnTextoChanging(value);
					this.SendPropertyChanging();
					this._Texto = value;
					this.SendPropertyChanged("Texto");
					this.OnTextoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Mensaje", Storage="_Usuario", ThisKey="IdUsuarioRec", OtherKey="LoginID", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Mensaje.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Mensaje.Add(this);
						this._IdUsuarioRec = value.LoginID;
					}
					else
					{
						this._IdUsuarioRec = default(string);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Mensaje1", Storage="_Usuario1", ThisKey="IdUsuarioEnv", OtherKey="LoginID", IsForeignKey=true)]
		public Usuario Usuario1
		{
			get
			{
				return this._Usuario1.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario1.Entity;
				if (((previousValue != value) 
							|| (this._Usuario1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario1.Entity = null;
						previousValue.Mensaje1.Remove(this);
					}
					this._Usuario1.Entity = value;
					if ((value != null))
					{
						value.Mensaje1.Add(this);
						this._IdUsuarioEnv = value.LoginID;
					}
					else
					{
						this._IdUsuarioEnv = default(string);
					}
					this.SendPropertyChanged("Usuario1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Evento")]
	public partial class Evento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdEvento;
		
		private string _Nombre;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private string _Lugar;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEventoChanging(long value);
    partial void OnIdEventoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnLugarChanging(string value);
    partial void OnLugarChanged();
    #endregion
		
		public Evento()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEvento", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdEvento
		{
			get
			{
				return this._IdEvento;
			}
			set
			{
				if ((this._IdEvento != value))
				{
					this.OnIdEventoChanging(value);
					this.SendPropertyChanging();
					this._IdEvento = value;
					this.SendPropertyChanged("IdEvento");
					this.OnIdEventoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lugar", DbType="NVarChar(500)")]
		public string Lugar
		{
			get
			{
				return this._Lugar;
			}
			set
			{
				if ((this._Lugar != value))
				{
					this.OnLugarChanging(value);
					this.SendPropertyChanging();
					this._Lugar = value;
					this.SendPropertyChanged("Lugar");
					this.OnLugarChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comentario")]
	public partial class Comentario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdComentario;
		
		private string _Texto;
		
		private string _LoginID;
		
		private System.Nullable<long> _IdNot;
		
		private bool _Estado;
		
		private System.DateTime _FechaCreacion;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdComentarioChanging(long value);
    partial void OnIdComentarioChanged();
    partial void OnTextoChanging(string value);
    partial void OnTextoChanged();
    partial void OnLoginIDChanging(string value);
    partial void OnLoginIDChanged();
    partial void OnIdNotChanging(System.Nullable<long> value);
    partial void OnIdNotChanged();
    partial void OnEstadoChanging(bool value);
    partial void OnEstadoChanged();
    partial void OnFechaCreacionChanging(System.DateTime value);
    partial void OnFechaCreacionChanged();
    #endregion
		
		public Comentario()
		{
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdComentario", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdComentario
		{
			get
			{
				return this._IdComentario;
			}
			set
			{
				if ((this._IdComentario != value))
				{
					this.OnIdComentarioChanging(value);
					this.SendPropertyChanging();
					this._IdComentario = value;
					this.SendPropertyChanged("IdComentario");
					this.OnIdComentarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Texto", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Texto
		{
			get
			{
				return this._Texto;
			}
			set
			{
				if ((this._Texto != value))
				{
					this.OnTextoChanging(value);
					this.SendPropertyChanging();
					this._Texto = value;
					this.SendPropertyChanged("Texto");
					this.OnTextoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", DbType="NVarChar(100)")]
		public string LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginIDChanging(value);
					this.SendPropertyChanging();
					this._LoginID = value;
					this.SendPropertyChanged("LoginID");
					this.OnLoginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNot", DbType="BigInt")]
		public System.Nullable<long> IdNot
		{
			get
			{
				return this._IdNot;
			}
			set
			{
				if ((this._IdNot != value))
				{
					this.OnIdNotChanging(value);
					this.SendPropertyChanging();
					this._IdNot = value;
					this.SendPropertyChanged("IdNot");
					this.OnIdNotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Bit NOT NULL")]
		public bool Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaCreacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaCreacion
		{
			get
			{
				return this._FechaCreacion;
			}
			set
			{
				if ((this._FechaCreacion != value))
				{
					this.OnFechaCreacionChanging(value);
					this.SendPropertyChanging();
					this._FechaCreacion = value;
					this.SendPropertyChanged("FechaCreacion");
					this.OnFechaCreacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Comentario", Storage="_Usuario", ThisKey="LoginID", OtherKey="LoginID", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Comentario.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Comentario.Add(this);
						this._LoginID = value.LoginID;
					}
					else
					{
						this._LoginID = default(string);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categoria")]
	public partial class Categoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdCategoria;
		
		private string _Nombre;
		
		private EntitySet<Noticia> _Noticia;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCategoriaChanging(long value);
    partial void OnIdCategoriaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Categoria()
		{
			this._Noticia = new EntitySet<Noticia>(new Action<Noticia>(this.attach_Noticia), new Action<Noticia>(this.detach_Noticia));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategoria", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdCategoria
		{
			get
			{
				return this._IdCategoria;
			}
			set
			{
				if ((this._IdCategoria != value))
				{
					this.OnIdCategoriaChanging(value);
					this.SendPropertyChanging();
					this._IdCategoria = value;
					this.SendPropertyChanged("IdCategoria");
					this.OnIdCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Noticia", Storage="_Noticia", ThisKey="IdCategoria", OtherKey="IdCategoria")]
		public EntitySet<Noticia> Noticia
		{
			get
			{
				return this._Noticia;
			}
			set
			{
				this._Noticia.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Noticia(Noticia entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = this;
		}
		
		private void detach_Noticia(Noticia entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Asociacion")]
	public partial class Asociacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdAsociacion;
		
		private string _Nombre;
		
		private string _Ubicacion;
		
		private string _Lider;
		
		private System.Nullable<long> _Telefono;
		
		private string _Correo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdAsociacionChanging(long value);
    partial void OnIdAsociacionChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnUbicacionChanging(string value);
    partial void OnUbicacionChanged();
    partial void OnLiderChanging(string value);
    partial void OnLiderChanged();
    partial void OnTelefonoChanging(System.Nullable<long> value);
    partial void OnTelefonoChanged();
    partial void OnCorreoChanging(string value);
    partial void OnCorreoChanged();
    #endregion
		
		public Asociacion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAsociacion", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdAsociacion
		{
			get
			{
				return this._IdAsociacion;
			}
			set
			{
				if ((this._IdAsociacion != value))
				{
					this.OnIdAsociacionChanging(value);
					this.SendPropertyChanging();
					this._IdAsociacion = value;
					this.SendPropertyChanged("IdAsociacion");
					this.OnIdAsociacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ubicacion", DbType="NVarChar(200)")]
		public string Ubicacion
		{
			get
			{
				return this._Ubicacion;
			}
			set
			{
				if ((this._Ubicacion != value))
				{
					this.OnUbicacionChanging(value);
					this.SendPropertyChanging();
					this._Ubicacion = value;
					this.SendPropertyChanged("Ubicacion");
					this.OnUbicacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lider", DbType="NVarChar(200)")]
		public string Lider
		{
			get
			{
				return this._Lider;
			}
			set
			{
				if ((this._Lider != value))
				{
					this.OnLiderChanging(value);
					this.SendPropertyChanging();
					this._Lider = value;
					this.SendPropertyChanged("Lider");
					this.OnLiderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="BigInt")]
		public System.Nullable<long> Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correo", DbType="NVarChar(100)")]
		public string Correo
		{
			get
			{
				return this._Correo;
			}
			set
			{
				if ((this._Correo != value))
				{
					this.OnCorreoChanging(value);
					this.SendPropertyChanging();
					this._Correo = value;
					this.SendPropertyChanged("Correo");
					this.OnCorreoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
